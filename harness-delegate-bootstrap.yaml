apiVersion: v1
kind: Namespace
metadata:
  name: harness-delegate-ng

---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
  # name: harness-delegate-ng-cluster-admin
# subjects:
  # - kind: ServiceAccount
    # name: default
    # namespace: harness-delegate-ng
# roleRef:
  # kind: ClusterRole
  # name: cluster-admin
  # apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
metadata:
  name: harness-delegate-bootstrap-account-token
  namespace: harness-delegate-ng
type: Opaque
data:
  ACCOUNT_SECRET: "NmQxMTJhN2ZmNWU3MmE0NmRkNmJhMGE0Nzg1OTIwN2I="

---

# The config map which contains the details of the cert to generate
# apiVersion: v1
# kind: ConfigMap
# metadata:
  # name: hello-world-cert-conf
  # namespace: harness-delegate-ng
# data:
  # CommonName: bootstrap-kickstart.optz.awmae.dev.aws.jpmchase.net
  
---


# If delegate needs to use a proxy, please follow instructions available in the documentation
# https://ngdocs.harness.io/article/5ww21ewdt8-configure-delegate-proxy-settings

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    harness.io/name: harness-delegate-bootstrap
  name: harness-delegate-bootstrap
  namespace: harness-delegate-ng
spec:
  replicas: 1
  selector:
    matchLabels:
      harness.io/name: harness-delegate-bootstrap
  template:
    metadata:
      labels:
        harness.io/name: harness-delegate-bootstrap
        certificate.eks.jpmc/enabled: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3460"
        prometheus.io/path: "/api/metrics"
        # certificate.eks.jpmc/certConfig: hello-world-cert-conf
        # certificate.eks.jpmc/keyName: key.pem
        # certificate.eks.jpmc/certName: cert.pem
        # certificate.eks.jpmc/certVolumeMountPath: "/etc/ssl/certs"
        # certificate.eks.jpmc/outputType: "P12"
        # certificate.eks.jpmc/keyStoreName: "my-keystore.p12"
        # certificate.eks.jpmc/keyStorePasswordSecret: "pkcs12-secret" # Must match the name of the secret in my-namespace
        # certificate.eks.jpmc/keyStorePasswordSecretKey: "pkcs12-pasword" # Must match a key in the above secret
        # certificate.eks.jpmc/certVolumeMountPath: "/tmp"
        # certificate.eks.jpmc/caName: "ca.bundle"
        certificate.eks.jpmc/caVolumeMountPath: "/ssl/truststore"
        certificate.eks.jpmc/includeCaBundle: "false"
        certificate.eks.jpmc/caName: "rootca.pem"
    spec:
      serviceAccountName: harness-sa
      terminationGracePeriodSeconds: 600
      restartPolicy: Always
      volumes:
      - name: config-vol
        configMap:
          name: jdk-cacerts
      containers:
      #- image: containerregistry-na.jpmchase.net/container-external/docker.io/harness/delegate-immutable/22.05.74968@sha256:0bacb0fbb746ea30145f13340b6d5d2a893ea7d731b3d84baa4be7999daba8dc
      - image: containerregistry-na.jpmchase.net/container-sandbox/awmaernd/harness/delegate-immutable/22.08.76130@sha256:1d5145e0fb2fa9e163bee592d462f1d873ce012c24c17e67659a27fe05e56129
        imagePullPolicy: Always
        name: delegate
        ports:
          - containerPort: 8080
        resources:
          limits:
            cpu: "0.5"
            memory: "2048Mi"
          requests:
            cpu: "0.5"
            memory: "2048Mi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3460
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /api/health
            port: 3460
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 15
        envFrom:
        - secretRef:
            name: harness-delegate-bootstrap-account-token
        volumeMounts:
        - name: config-vol
          mountPath: /opt/java/openjdk/lib/security/cacerts
          subPath: cacerts
        env:
        - name: JAVA_OPTS
          value: "-Xms64M"
        - name: PROXY_HOST
          value: "proxy.jpmchase.net"
        - name: PROXY_PORT
          value: "10443"
        - name: PROXY_SCHEME
          value: "HTTP"
        - name: NO_PROXY
          value: ".jpmchase.net,.jpmorganchase.com,.eks.amazonaws.com"
        - name: ACCOUNT_ID
          value: 1rAktn4OT2m64qw9hop3_A
        - name: MANAGER_HOST_AND_PORT
          value: https://app.harness.io/gratis
        - name: DEPLOY_MODE
          value: KUBERNETES
        - name: DELEGATE_NAME
          value: harness-delegate-bootstrap
        - name: DELEGATE_TYPE
          value: "KUBERNETES"
        - name: DELEGATE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INIT_SCRIPT
          value: ""
        - name: DELEGATE_DESCRIPTION
          value: ""
        - name: DELEGATE_TAGS
          value: ""
        - name: NEXT_GEN
          value: "true"
        - name: CLIENT_TOOLS_DOWNLOAD_DISABLED
          value: "true"
        - name: LOG_STREAMING_SERVICE_URL
          value: "https://app.harness.io/gratis/log-service/"
        - name: ADDITIONAL_CERTS_PATH
          value: /ssl/truststore/rootca.pem
        - name: CI_MOUNT_VOLUMES
          value: /ssl/truststore/rootca.pem:/etc/ssl/certs/ca-bundle.crt,/ssl/truststore/rootca.pem:/kaniko/ssl/certs/additional-ca-cert-bundle.crt,/ssl/truststore/rootca.pem:/opt/java/openjdk/lib/security/cacerts

---

apiVersion: v1
kind: Service
metadata:
  name: delegate-service
  namespace: harness-delegate-ng
spec:
  type: ClusterIP
  selector:
    harness.io/name: harness-delegate-bootstrap
  ports:
    - port: 8080

---

# kind: Role
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
  # name: upgrader-cronjob
  # namespace: harness-delegate-ng
# rules:
  # - apiGroups: ["batch", "apps", "extensions"]
    # resources: ["cronjobs"]
    # verbs: ["get", "list", "watch", "update", "patch"]
  # - apiGroups: ["extensions", "apps"]
    # resources: ["deployments"]
    # verbs: ["get", "list", "watch", "create", "update", "patch"]

# ---

# kind: RoleBinding
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
  # name: harness-delegate-bootstrap-upgrader-cronjob
  # namespace: harness-delegate-ng
# subjects:
  # - kind: ServiceAccount
    # name: upgrader-cronjob-sa
    # namespace: harness-delegate-ng
# roleRef:
  # kind: Role
  # name: upgrader-cronjob
  # apiGroup: ""

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: upgrader-cronjob-sa
  namespace: harness-delegate-ng

---

apiVersion: v1
kind: Secret
metadata:
  name: harness-delegate-bootstrap-upgrader-token
  namespace: harness-delegate-ng
type: Opaque
data:
  UPGRADER_TOKEN: "NmQxMTJhN2ZmNWU3MmE0NmRkNmJhMGE0Nzg1OTIwN2I="

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: harness-delegate-bootstrap-upgrader-config
  namespace: harness-delegate-ng
data:
  config.yaml: |
    mode: Delegate
    dryRun: false
    workloadName: harness-delegate-bootstrap
    namespace: harness-delegate-ng
    containerName: delegate
    delegateConfig:
      accountId: 1rAktn4OT2m64qw9hop3_A
      managerHost: https://app.harness.io/gratis

---

# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
  # labels:
    # harness.io/name: harness-delegate-bootstrap-upgrader-job
  # name: harness-delegate-bootstrap-upgrader-job
  # namespace: harness-delegate-ng
# spec:
  # schedule: "0 */1 * * *"
  # concurrencyPolicy: Forbid
  # startingDeadlineSeconds: 20
  # jobTemplate:
    # spec:
      # template:
        # spec:
          # suspend: true #This can be used to update the image but it's completely optional It can either be completely removed  from the YAML or can be suspended 
          # serviceAccountName: upgrader-cronjob-sa
          # restartPolicy: Never
          # containers:
          # - image: harness/upgrader:latest
            # name: upgrader
            # imagePullPolicy: Always
            # envFrom:
            # - secretRef:
                # name: harness-delegate-bootstrap-upgrader-token
            # volumeMounts:
              # - name: config-volume
                # mountPath: /etc/config
          # volumes:
            # - name: config-volume
              # configMap:
                # name: harness-delegate-bootstrap-upgrader-config
